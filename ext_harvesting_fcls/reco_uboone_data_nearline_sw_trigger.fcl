## 
##  Shared art job configuartions for MCC8 uboone reco
##
#include "services_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "nearline_swtrigger_monitor.fcl"
#include "reco_uboone_data_mcc8.fcl"

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator:   {} #ART native random number generator
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_data
  @table::microboone_reco_data_services
}

process_name: DataRecoNearlineSWTrigger

services.DatabaseUtil.ShouldConnect: false

#source is a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
  saveMemoryObjectThreshold: 0
  inputCommands: ["keep *_*_*_*", "drop *_*_*_Data*Reco*" ]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
 }

 filters:
 { 
   swtrigger: @local::swtriggerEXT
   opfilter: @local::microboone_common_op_precut_ext
 }

 analyzers:
 {
   opfilterana: {
     module_type: "UbooneOpticalFilterAna"
     InputTag: "opfilter"
   }
 }

 #reco sequence and trigger_paths to be defined elsewhere

 ext_filter: [swtrigger ] 
 trigger_paths: [ ext_filter ]
 stream1:  [ out1 ]
 ana: [ ]
 end_paths:     [ ]  

}

outputs:
{
 out1:
 {
   module_type: RootOutput
   dataTier: "reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
   SelectEvents: [ ext_filter ]
 }
}

### Here we try to suppress known and pointless messages
services.message.destinations :
{
  STDCOUT: 
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       ChannelFilter:
       {
         limit: 0
         reportEvery: 0
       }
       TrackStitcher:
       {
         limit: 0
         reportEvery: 0
       }
       CRHitRemoval:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}

services.TFileService.fileName: "opfilterana.root"

microboone_tfile_metadata:
{
  JSONFileName:          "opfilterana.root.json"
  GenerateTFileMetadata: true
  dataTier:              "root-tuple"
  fileFormat:            "root"
}
